{"fileName":"1.css动画之animation.md","dirList":["docs","css&html"],"name":"1.css动画之animation","createTime":1679414070451.2617,"modifyTime":1679414071899.356,"data":"\n### animation\n\n```\ndiv:hover {\n  animation: 1s 1s rainbow linear 3 forwards normal;\n}\n\n这是一个简写形式，可以分解成各个单独的属性。\n\n\ndiv:hover {\n  animation-name: rainbow; // keyframes name\n  animation-duration: 1s; // 动画时间\n  animation-timing-function: linear; // \n  animation-delay: 1s;\n  animation-fill-mode:forwards; // animation-fill-mode动画结束后的状态\n  animation-direction: normal; \n  animation-iteration-count: 3;\n}\n\n@keyframes rainbow {\n  0% { background: #c00; }\n  50% { background: orange; }\n  100% { background: yellowgreen; }\n}\n```\n\n- animation-direction\n  - 动画循环播放时，每次都是从结束状态跳回到起始状态，再开始播放。animation-direction属性，可以改变这种行为。\n\n- animation-timing-function 属性可接受以下值：\n  - ease - 指定从慢速开始，然后加快，然后缓慢结束的动画（默认）\n  - linear - 规定从开始到结束的速度相同的动画\n  - ease-in - 规定慢速开始的动画\n  - ease-out - 规定慢速结束的动画\n  - ease-in-out - 指定开始和结束较慢的动画\n  - cubic-bezier(n,n,n,n) - 运行您在三次贝塞尔函数中定义自己的值\n\n- animation-fill-mode 属性可接受以下值：\n  - none - 默认值。动画在执行之前或之后不会对元素应用任何样式。\n  - forwards - 元素将保留由最后一个关键帧设置的样式值（依赖  animation-direction 和 animation-iteration-count）。\n  - backwards - 元素将获取由第一个关键帧设置的样式值（取决于 animation-direction），并在动画延迟期间保留该值。\n  - both - 动画会同时遵循向前和向后的规则，从而在两个方向上扩展动画属性。\n\n##### animation-play-state\n有时，动画播放过程中，会突然停止。这时，默认行为是跳回到动画的开始状态。\n\n如果想让动画保持突然终止时的状态，就要使用animation-play-state属性。\n\n\n```\ndiv {\n    animation: spin 1s linear infinite;\n    animation-play-state: paused;\n}\n\ndiv:hover {\n  animation-play-state: running;\n}\n\n// 上面的代码指定，没有鼠标没有悬停时，动画状态是暂停；一旦悬停，动画状态改为继续播放。效果如下。\n\n```"}