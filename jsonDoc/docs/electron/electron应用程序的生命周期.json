{"fileName":"electron应用程序的生命周期.md","dirList":["docs","electron"],"name":"electron应用程序的生命周期","createTime":1689012655593.2922,"modifyTime":1689091473039.4043,"data":"\n# electron应用程序的生命周期\n\n应用程序的生命周期是指应用程序从启动到关闭期间所经历的不同阶段和事件。在 Electron 中，应用程序的生命周期由主进程中的 app 对象触发的一系列事件来管理。\n\n### ready\n\nready 事件在应用程序完成基础初始化后触发，表示应用程序已准备好使用。我们可以在ready事件中，你可以创建窗口、加载页面和执行初始化逻辑。\n\n```js\napp.on('ready', () => {\n  const mainWindow = new BrowserWindow({ width: 800, height: 600 });\n  mainWindow.loadFile('index.html');\n});\n```\n\n### window-all-closed\n\nwindow-all-closed 事件在所有应用程序窗口都被关闭后触发。\n\n```js\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n```\n\n### activate\n\nactivate 事件在应用程序激活时触发，通常在没有窗口打开的情况下点击应用程序的图标或任务栏图标时。\n\n```js\napp.on('activate', () => {\n  // 获取所有窗口实例\n  const windows = BrowserWindow.getAllWindows();\n\n  // 获取当前活动窗口\n  const focusedWindow = BrowserWindow.getFocusedWindow();\n\n});\n```\n\n### before-quit\n\nbefore-quit 事件在应用程序开始退出之前触发，通常是在用户显式关闭应用程序或通过代码触发退出操作时。\n\n```js\napp.on('before-quit', () => {\n  // 执行一些清理操作，如保存数据等\n});\n```\n\n### quit\n\nquit 事件在应用程序即将退出时触发，通常是在 before-quit 事件之后。可以执行最后的清理操作，保存数据或进行日志记录等。\n\n```js\napp.on('quit', () => {\n  // 执行最后的清理操作，如释放资源等\n});\n\n```"}