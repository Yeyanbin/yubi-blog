{"fileName":"【nextjs手把手教学之一】创建页面和服务端渲染.md","dirList":["docs","React相关","nextjs"],"name":"【nextjs手把手教学之一】创建页面和服务端渲染","createTime":1679414070447.138,"modifyTime":1679414071143.0188,"data":"\n# 【nextjs手把手教学之一】创建页面和服务端渲染\n\n## 创建一个页面\n\n> Next.js 是围绕着 页面（pages） 的概念构造的。一个页面（page）就是一个从 pages 目录下的 .js、.jsx、.ts 或 .tsx 文件导出的 React 组件。\n\n也就是创建一个页面只需要做到以下几步\n\n1. 在目录`/pages`下创建文件`helloworld.tsx`\n2. 在`helloworld.tsx`中导出的React组件\n\n然后我们生成一个不带数据的静态页面。\n\n![截图](./helloworld.png)\n\n```tsx\n// hellworld.tsx 可复制到项目中尝试创建页面\nimport React from 'react'\n\nconst helloworldPage = () => (\n  <div>\n    helloworld\n  </div>\n);\n\nexport default helloworldPage;\n```\n\n## 渲染数据\n\n> 既然是，服务端渲染那必须要渲染数据。\n\nNext.js 允许你从同一文件 export（导出） 一个名为 getStaticProps 的 async（异步） 函数。该函数在构建时被调用，并允许你在预渲染时将获取的数据作为 props 参数传递给页面。\n\n所以，渲染数据的步骤就是\n1. 创建getStaticProps，在里面获取接口数据，并传递到组件。\n2. 在React组件生成的时候使用该数据。 \n\n> 注意，不是所有数据都是必须首渲染中获取的\n\n让我们改造一下`helloworld.tsx`文件，简单模拟一下接口请求\n```tsx\nimport React from 'react'\n\ninterface IProps {\n  name: string;\n}\n\nconst getUserInfo = () => new Promise((resolve: (prop: IProps) => void) => {\n  setTimeout(() => {\n    resolve({\n      name: 'Yubi'\n    });\n  }, 3000);\n});\n\nconst helloworldPage = (props: IProps) => (\n  <div>\n    hello, {props.name}\n  </div>\n);\n\nexport const getStaticProps = async () => {\n  const { name } = await getUserInfo();\n\n  return {\n    props: {\n      name,\n    },\n  }\n}\n\n\nexport default helloworldPage;\n```\n\n运行一下，可见三秒后展示以下内容\n\n![](./helloyubi.png)"}